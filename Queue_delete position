import java.util.*;


class Main
{
   static class Queue
   {
    int queue[];
    //int temp[];
    int front=-1;
    int rear=-1;
    int size;
    int val;
    Queue(int capacity)
    {
        queue=new int[capacity];
        //temp=new int[capacity];
        size=capacity;
    }
    void push(int value)
    {
        if(front==-1&& rear==-1){
            front++;
            //rear++;
        }
        if(front<=0&&rear<size-1)
        {
            queue[++rear]=value;
        }
        else if(rear==size-1)
       {
           System.out.println("Queue is full");
       }
    }
  void pop()
{
    if(rear==-1 && front==-1)
    {
        System.out.println("Queue is empty");
    }
    else{
      for(int i=0;i<rear;i++)
        {
              queue[i]=queue[i+1];
        }
      rear--;
    }
    
}
void delspc(int value)
{
    int index=0;
    for(int i=0;i<rear;i++)
    {
        if(queue[i]==value)
        {
            index+=i;
        }
    }
    for(int j=index;j<rear;j++)
    {
        queue[j]=queue[j+1];
    }
    rear--;
}
void display()
{
    int i=0;
    while(i<=rear)
    {
        System.out.print(queue[i]+" ");
        i++;
    }
}
int peekdisplay()
{
    int peek=queue[rear];
    return peek;
}
/*void reverse()
{
    int temp[] =new int[size];
    int x=top;
    for(int i=0;i<=x;i++)
    {
        temp[i]=pop();
    }
    top=x;
    for(int j=0;j<=top;j++)
    {
    stack[j]=temp[j];
    }
}*/
}
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        Queue q=new Queue(5);
        q.push(sc.nextInt());
        q.push(sc.nextInt());
        q.push(sc.nextInt());
        q.push(sc.nextInt());
        q.push(sc.nextInt());
        q.display();
        System.out.println("\nAfter poping:");
        q.delspc(2);
        q.display();
        int result=q.peekdisplay();
        System.out.println("\nPeak element is:"+result);
        //s.reverse();
        //s.display();
    }
}
